generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ReportFrequency {
  DAILY
  WEEKLY
}

model User {
  id               String          @id @default(cuid())
  email            String          @unique
  name             String?
  isAdmin          Boolean         @default(false)
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  lastReportSent   DateTime?
  reportsEnabled   Boolean         @default(false)
  reportsFrequency ReportFrequency @default(DAILY)
  language         String          @default("en")
  emailVerified    DateTime?
  watchedDatasets  DatasetWatch[]
  datasets         Dataset[]
  sessions         Session[]

  @@map("users")
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  token      String   @unique
  expires    DateTime
  identifier String

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Template {
  id            String   @id @default(cuid())
  name          String
  description   String?
  overpassQuery String
  category      String
  tags          String[]
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  datasets Dataset[]

  @@map("templates")
}

model Area {
  id          Int      @id
  name        String
  countryCode String?
  bounds      String?
  geojson     Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  datasets Dataset[]

  @@map("areas")
}

model Dataset {
  id          String    @id @default(cuid())
  userId      String
  templateId  String
  areaId      Int
  cityName    String
  isActive    Boolean   @default(true)
  isPublic    Boolean   @default(false)
  lastChecked DateTime?
  dataCount   Int       @default(0)
  geojson     Json?
  bbox        Json?
  stats       Json?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  user     User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  template Template       @relation(fields: [templateId], references: [id], onDelete: Cascade)
  area     Area           @relation(fields: [areaId], references: [id], onDelete: Cascade)
  watchers DatasetWatch[]

  @@unique([userId, templateId, areaId])
  @@map("datasets")
}

model DatasetWatch {
  id        String   @id @default(cuid())
  userId    String
  datasetId String
  createdAt DateTime @default(now())

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  dataset Dataset @relation(fields: [datasetId], references: [id], onDelete: Cascade)

  @@unique([userId, datasetId])
  @@map("dataset_watches")
}
